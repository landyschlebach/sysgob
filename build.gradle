description = 'Final user content views base project'
apply plugin: 'base'

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

allprojects { project ->
    apply plugin: 'maven-publish'

    publishing {
        repositories {
            maven {
                credentials {
                    username 'deployment'
                    password 'movile2000'
                }
                url 'http://nexus.it.movile.com:8081/nexus/content/repositories/releases'
            }
        }
        publications {
            maven(MavenPublication) {
                groupId = 'com.movile.views'
                artifactId = project.name
                version = project.version
                logger.debug "Will publish $groupId:$artifactId:$version"
                from components.java
            }
        }
    }

    apply plugin: 'java'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    compileJava.options.encoding = 'UTF-8'

    defaultTasks = ['clean', 'build']

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.12'
        compile 'ch.qos.logback:logback-classic:1.1.3'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "http://nexus.it.movile.com:8081/nexus/content/repositories/releases"
        }
        maven {
            url "http://nexus.it.movile.com:8081/nexus/content/groups/public-snapshots"
        }
        maven {
            url "http://nexus.it.movile.com:8081/nexus/content/repositories/releases"
        }
    }
}

//Web projects
def webprojects = ["playroom", "smartchannel", "trismegistus", "claro-kids", "messaging", "multiclub", "sportsworld"]

allprojects { it ->
    if(webprojects.contains(it.name)) {
        apply plugin: 'war'
        apply plugin: 'com.bmuschko.tomcat'

        war {
            archiveName = "$project.name"+".war"
        }

        dependencies {
            compile project(':commons-web')

            providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
            compile "org.springframework:spring-webmvc:${springVersion}"

            compile 'org.thymeleaf:thymeleaf-spring4:2.1.3.RELEASE'
            compile 'net.sourceforge.nekohtml:nekohtml:1.9.21'

            compile 'net.sourceforge.wurfl:wurfl:1.4.3.1'
            compile 'org.apache.commons:commons-math3:3.5'

            tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
                    "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
                    "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
        }
    }

    if(!it.name.contains("commons") && it.path!=':') {
        project(':commons-java').evaluationDependsOn(it.path)
        if(project.gradle.startParameter.toString().contains(it.name) && !rootProject.logPath.equals(project.logPath)) {
            rootProject.ext.logPath = project.ext.logPath;
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion "${springVersion}"
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.1'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

//Common published projects
allprojects { project ->
    if (project.name.startsWith("common")) {
        apply plugin: 'maven-publish'

        publishing {
            repositories {
                maven {
                    credentials {
                        username ''
                        password ''
                    }
                    url 'http://nexus.it.movile.com:8081/nexus/content/repositories/releases'
                }
            }
            publications {
                maven(MavenPublication) {
                    groupId = 'com.movile.views'
                    artifactId = project.name
                    version = project.version
                    logger.debug "Will publish $groupId:$artifactId:$version"
                    from components.java
                }
            }
        }
    }
}
